Struct{
	FILETIME:={
		N:dwLowDateTime,
		N:dwHighDateTime
	}
	
	WIN32_FIND_DATAW:={
		N:dwFileAttributes,
		FILETIME:ftCreationTime,
		FILETIME:ftLastAccessTime,
		FILETIME:ftLastWriteTime,
		N:nFileSizeHigh,
		N:nFileSizeLow,
		N:dwReserved0,
		N:dwReserved1,
		B:cFileName[512],// 256 * 2
		B:cAlternateFileName[28],// 14 * 2
		N:dwFileType,
		N:dwCreatorType,
		B:wFinderFlags[2]// WORD
	}
	
	CONSOLE_READCONSOLE_CONTROL:={
		N:nLength,
		N:nInitialChars,
		N:dwCtrlWakeupMask,
		N:dwControlKeyState
	}
}

Extra:"Kernel32.dll"{
	FindFirstFileW(
		N:lpFileName,
		WIN32_FIND_DATAW:lpFindFileData)->N:=FindFirstFileW;
	FindNextFileW(
		N:hFindFile,
		WIN32_FIND_DATAW:lpFindFileData)->N:=FindNextFileW;
	FindClose(
		N:hFindFile)->N:=FindClose;
	ReadConsoleW(
		N:hConsoleInput,
		N:lpBuffer,
		N:nNumberOfCharsToRead,
		N:lpNumberOfCharsRead,
		N:pInputControl)->N:=ReadConsoleW;
	GetStdHandle(
		N:nStdHandle)->N:=GetStdHandle;
	SetConsoleOutputCP(
		N:wCodePageID)->N:=SetConsoleOutputCP;
}

Console{
	InputEx(N:pszBuf,N:cchBuf)->N:={
		N:hInput=GetStdHandle(-10);
		N:cchRead=0;
		CONSOLE_READCONSOLE_CONTROL:crcc;
		
		crcc.nLength=16;
		crcc.nInitialChars=0;
		crcc.dwCtrlWakeupMask=9217;
		crcc.dwControlKeyState=0;
		
		ReadConsoleW(hInput,pszBuf,cchBuf,&cchRead,&crcc);
		N:pEnd = pszBuf+(cchRead-1)*2;
		if(cchRead!=0)
		{
			(pEnd->B)=0;
			((pEnd+1)->B)=0;
			cchRead=cchRead-1;
		}
		{
			pszBuf->B=0;
			((pszBuf+1)->B)=0;
		};
		
		return(cchRead);
	}
}